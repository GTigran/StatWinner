@model StatWinner.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

@Styles.Render("~/Content/Registration")

@section Scripts {
    @Scripts.Render("~/bundles/Registration")
}

<div class="page-inner-container">
    <div class="page-title">Registration</div>

    <div class="registration-container" ng-controller="RegistrationController" ng-app="stat_winner_module">
        <div class="table" ng-form name="registrationForm" data-model-name="model" default-button="btnRegister" >
            <div class="row">
                <div class="col-sm-4">
                    <label>First Name: <span class="error">*</span> </label>
                </div>
                <div class="col-sm-8">
                    <input type="text" ng-model="model.FirstName" ng-required="true" ng-model-options='{ allowInvalid: true }' transfer-validation='{{registrationForm.$valid }}' is-changed='{{model.IsElementValueChanged}}' show-validation-error='{{model.ShowValidationFields.FirstName}}' name="FirstName" />
                    <div validation-message error='{{registrationForm.FirstName.$error}}' class='validation-error' show-validation-error='{{model.ShowValidationFields.FirstName}}'></div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <label>Last Name: <span class="error">*</span></label>
                </div>
                <div class="col-sm-8">
                    <input type="text" ng-model="model.LastName" ng-required="true" ng-model-options='{ allowInvalid: true }' transfer-validation='{{registrationForm.$valid }}' is-changed='{{model.IsElementValueChanged}}' show-validation-error='{{model.ShowValidationFields.LastName}}' name="LastName" />
                    <div validation-message error='{{registrationForm.LastName.$error}}' class='validation-error' show-validation-error='{{model.ShowValidationFields.LastName}}'></div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <label>Country: <span class="error">*</span></label>
                </div>
                <div class="col-sm-8">
                    <select kendo-drop-down-list
                            k-data-text-field="'name'"
                            k-data-value-field="'id'"
                            k-data-source="Countries"
                            ng-model="model.CountryId" ng-required="true" ng-model-options='{ allowInvalid: true }' transfer-validation='{{registrationForm.$valid }}' is-changed='{{model.IsElementValueChanged}}' show-validation-error='{{model.ShowValidationFields.CountryId}}' name="CountryId"></select>
                    <div validation-message error='{{registrationForm.CountryId.$error}}' class='validation-error' show-validation-error='{{model.ShowValidationFields.CountryId}}'></div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <label>State:</label>
                </div>
                <div class="col-sm-8">
                    <input type="text" />
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <label>City:</label>
                </div>
                <div class="col-sm-8">
                    <input type="text" />
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <label>Email: <span class="error">*</span></label>
                </div>
                <div class="col-sm-8">

                    @{
                        var emailRegex = @"/^[_a-z0-9]+(\.[_a-z0-9]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$/";
                    }

                    <input type="text" ng-model="model.Email" ng-pattern="@emailRegex" ng-required="true" ng-model-options='{ allowInvalid: true }' transfer-validation='{{registrationForm.$valid }}' is-changed='{{model.IsElementValueChanged}}' show-validation-error='{{model.ShowValidationFields.Email}}' name="Email"
                           ng-remote-validate="/api/AccountRegistration/IsValidEmail"
                           ng-remote-throttle="550"
                           ng-remote-method="GET" />
                    <div validation-message error='{{registrationForm.Email.$error}}' class='validation-error' show-validation-error='{{model.ShowValidationFields.Email}}' ngRemoteValidateMessage="This email address is already in use" patternMessage="Invalid Email Address"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <label>Password: <span class="error">*</span></label>
                </div>
                <div class="col-sm-8">
                    @{
                        var passwordValidatorRegExp = @"^(?=.*[A-Za-z])(?=.*[0-9])(?=(?:.*?[!@#$%\^&*\(\)\-_+=;:'""\/\[\]{},.<>|`]){1}).{8,32}$";

                    }
                    <input type="Password" ng-model="model.Password" ng-required="true" ng-model-options='{ allowInvalid: true }' transfer-validation='{{registrationForm.$valid }}' is-changed='{{model.IsElementValueChanged}}' show-validation-error='{{model.ShowValidationFields.Password}}' name="Password" compare-validator="true" compare-validator-otherfield="ConfirmPassword" compare-validator-operator="eq" pattern="@passwordValidatorRegExp"/>
                    <div validation-message error='{{registrationForm.Password.$error}}' class='validation-error' show-validation-error='{{model.ShowValidationFields.Password}}' compareValidatorMessage="Passwords are not equal!" patternMessage="Must be minimum 8 characters, alphanumeric, contain at least 1 special character"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <label>Confirm Password: <span class="error">*</span></label>
                </div>
                <div class="col-sm-8">
                    <input type="password" ng-model="model.ConfirmPassword" ng-required="true" ng-model-options='{ allowInvalid: true }' transfer-validation='{{registrationForm.$valid }}' is-changed='{{model.IsElementValueChanged}}' show-validation-error='{{model.ShowValidationFields.ConfirmPassword}}' name="ConfirmPassword" />
                    <div validation-message error='{{registrationForm.ConfirmPassword.$error}}' class='validation-error' show-validation-error='{{model.ShowValidationFields.ConfirmPassword}}'></div>
                </div>
            </div>
            <div class="row">
                <div class="hor-line">

                </div>
            </div>
            <div class="row">
                <div class="col-sm-12 buttons">
                    <button class="btn btn-primary" id="btnRegister" ng-click="Register()">Register</button>
                </div>
            </div>
        </div>
    </div>
</div>



